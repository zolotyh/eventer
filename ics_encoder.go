package main

import (
	"io"

	"github.com/lestrrat-go/bufferpool"
)

type Encoder struct {
	crlf string
	dst  io.Writer
}

func NewEncoder(dst io.Writer) *Encoder {
	return &Encoder{
		crlf: "\x0d\x0a",
		dst:  dst,
	}
}

func (enc *Encoder) Encode(e interface {}) error {

	buf := bufferpool.Get()
	defer bufferpool.Release(buf)

	buf.WriteString("BEGIN:VCALENDAR\n")
	buf.WriteString("X-LOTUS-CHARSET:UTF-8\n")
	buf.WriteString("VERSION:2.0\n")
	// buf.WriteString("BEGIN:VTIMEZONE\n")
	// buf.WriteString("TZID:Europe/Berlin\n")
	// buf.WriteString("X-LIC-LOCATION:Europe/Berlin\n")
	// buf.WriteString("BEGIN:DAYLIGHT\n")
	// buf.WriteString("TZOFFSETFROM:+0100\n")
	// buf.WriteString("TZOFFSETTO:+0200\n")
	// buf.WriteString("TZNAME:CEST\n")
	// buf.WriteString("DTSTART:19700329T020000\n")
	// buf.WriteString("RRULE:FREQ=YEARLY;INTERVAL=1;BYDAY=-1SU;BYMONTH=3\n")
	// buf.WriteString("END:DAYLIGHT\n")
	// buf.WriteString("BEGIN:STANDARD\n")
	// buf.WriteString("TZOFFSETFROM:+0200\n")
	// buf.WriteString("TZOFFSETTO:+0100\n")
	// buf.WriteString("TZNAME:CET\n")
	// buf.WriteString("DTSTART:19701025T030000\n")
	// buf.WriteString("RRULE:FREQ=YEARLY;INTERVAL=1;BYDAY=-1SU;BYMONTH=10\n")
	// buf.WriteString("END:STANDARD\n")
	// buf.WriteString("END:VTIMEZONE\n")
	buf.WriteString("METHOD:REQUEST\n")

	buf.WriteString("BEGIN:VEVENT\n")
	// buf.WriteString("UID:ics.terminsysteme.de1552445816\n")
	// buf.WriteString("DTSTAMP:20190313T035656\n")
	buf.WriteString("CLASS:PUBLIC\n")
	buf.WriteString("DTSTART;TZID=Europe/Moscow:20190314T0130000\n")
	buf.WriteString("DTEND;TZID=Europe/Moscow:20190314T014000\n")
	buf.WriteString("LOCATION:test location\n")
	buf.WriteString("SUMMARY:test\n")
	buf.WriteString("URL:test.com\n")
	buf.WriteString("DESCRIPTION:https://music.yandex.ru/search?text=Andy%20Timmons\n\n---\ngenerated by http://www.terminsysteme.de/ics\n")

	buf.WriteString("BEGIN:VALARM\n")
        buf.WriteString("ACTION:DISPLAY\n")
        buf.WriteString("TRIGGER:-PT5M\n")
	buf.WriteString("DESCRIPTION:Erinnerung\n")
	buf.WriteString("END:VALARM\n")

	buf.WriteString("END:VEVENT\n")
	buf.WriteString("END:VCALENDAR\n")

	_, err := buf.WriteTo(enc.dst)
	return err
}
